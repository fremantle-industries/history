<div class="space-x-4">
  <%= render HistoryWeb.DataView, "_header.html", conn: @socket, section: [{"Predicted Funding Rates", Routes.predicted_funding_rate_path(@socket, :index)}, "Jobs"] %>
</div>
<%= render HistoryWeb.DataView, "_nav.html", conn: @socket %>

<div class="mt-8">
  <h3 class="text-2xl">Jobs</h3>

  <%= form_for @job_changeset, "#", [phx_submit: :download, class: "flex items-start mt-4"], fn f -> %>
    <div class="w-5/12 flex space-x-2">
      <label for="products-search" class="font-bold mt-2">Products:</label>
      <div
        class="flex-grow"
        x-data="{
          products: <%= @swap_products |> Enum.map(&Map.take(&1, [:id, :venue, :symbol])) |> Jason.encode!() %>,
          selections: [],
          isOpen: false,
          focus: 0,
          searchTerm: '',
          searchableProducts() {
            const unselectedProducts =  this.products.filter(p => !this.selections.includes(p))
            const searchTerms = this.searchTerm.split(' ').filter(t => t !== '')

            if (searchTerms.length === 0) {
              return unselectedProducts
            }
            return unselectedProducts.filter(p => {
              const match = searchTerms.some(t => p.venue.includes(t)) || searchTerms.some(t => p.symbol.includes(t))
              if (match) { return true }

              const venueAndProductSearchTerms = searchTerms.map(t => t.split(':')).filter(t => t.length === 2)
              return venueAndProductSearchTerms.some(([v, s]) => p.venue === v && p.symbol.includes(s))
            })
          },

          open() {
            this.isOpen = true
          },
          close() {
            this.isOpen = false
            this.focus = 0
          },
          scrollTo(idx) {
            document.querySelector(`[ref='item-${idx}']`)?.scrollIntoView(false)
          },
          deselect(product) { this.selections = this.selections.filter(p => p !== product) },
          setFocus(idx) {
            this.focus = idx
          },
          focusPrev(event) {
            this.setFocus(Math.max(this.focus-1, 0))
            this.scrollTo(this.focus)
            event.preventDefault()
          },
          focusNext(event) {
            const products = this.searchableProducts()
            this.setFocus(Math.min(this.focus+1, products.length-1))
            this.scrollTo(this.focus)
            event.preventDefault()
          },
          select(product) {
            this.selections.push(product)
          },
          selectFocused(event) {
            const product = this.searchableProducts()[this.focus]
            if (product) {
              this.selections.push(product)
            } else {
              const segments = this.searchTerm.split(':')
              if (segments.length === 2) {
                this.selections.push({ venue: segments[0], symbol: segments[1] })
                this.searchTerm = ''
              }
            }
            event.preventDefault()
          },
          pop(event) {
            if (this.searchTerm === '' && (event.key === 'Backspace' || event.code === 'Backspace')) {
              this.selections.pop()
            }
          }
        }"
        @click="$refs.search.focus()"
        @click.away="close()"
      >
        <div class="flex flex-wrap space-x-1 space-y-1 border border-gray-600">
          <template x-for="product in selections">
            <div class="flex place-self-center text-xs">
              <span class="border border-blue-700 rounded-l-lg bg-blue-700 text-white px-2 py-1" x-text="product.venue"></span>
              <span class="border-t border-b px-2 py-1" x-text="product.symbol"></span>

              <label class="border rounded-r-lg px-2 py-1 cursor-pointer align-center">
                <input
                  type="checkbox"
                  name="predicted_funding_rate_job[products][]"
                  checked
                  x-bind:value="JSON.stringify({ venue: product.venue, symbol: product.symbol })"
                  @change="deselect(product)"
                  class="hidden" />
                <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3" viewBox="0 0 20 14" fill="currentColor">
                  <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </label>
            </div>
          </template>

          <input
            type="text"
            id="products-search"
            autocomplete="off"
            class="text-sm flex-grow border-0 m-0 px-2 py-2 focus:outline-none focus:ring-transparent"
            x-ref="search"
            x-model="searchTerm"
            @focus="open()"
            @keydown.arrow-up="focusPrev($event)"
            @keydown.arrow-down="focusNext($event)"
            @keydown.enter="selectFocused($event)"
            @keydown="pop($event)" />
        </div>
        <div
          class="absolute w-96 max-h-64 bg-white shadow-md overflow-y-auto"
          style="display: none"
          x-show="isOpen"
        >
          <template x-for="(product, index) in searchableProducts()">
            <label
              class="block"
              :class="index === focus ? 'bg-gray-200 opacity-50' : ''"
              :ref="`item-${index}`"
              @mouseover="setFocus(index)"
            >
              <input
                class="hidden"
                type="checkbox"
                @change="select(product)" />
              <span class="inline-block bg-blue-700 text-white px-2 py-2" x-text="product.venue"></span>
              <span class="inline-block pl-2 py-2" x-text="product.symbol"></span>
            </label>
          </template>
        </div>
      </div>
      <%= error_tag f, :products %>
    </div>

    <div class="w-7/12">
      <button class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded ml-2">
        Download
      </button>
    </div>
  <% end %>

  <table class="w-full mt-4">
    <thead class="bg-gray-200 border-t-2 border-gray-400">
      <tr>
        <th scope="col" class="px-4 py-3 text-left text-gray-700">ID</th>
        <th scope="col" class="px-4 py-3 text-left text-gray-700">Created At</th>
        <th scope="col" class="px-4 py-3 text-left text-gray-700">Products</th>
        <th scope="col" class="px-4 py-3 text-left text-gray-700">Status</th>
        <th scope="col" class="px-4 py-3 text-right text-gray-700">Actions</th>
      </tr>
    </thead>
    <tbody>
      <%= if Enum.any?(@jobs) do %>
        <%= for j <- @jobs do %>
          <tr class="hover:bg-gray-50 border-t border-b group">
            <td class="px-4 py-3"><%= link j.id, to: Routes.predicted_funding_rate_job_path(@socket, :show, j.id), class: "hover:opacity-75" %></td>
            <td class="px-4 py-3"><%= j.inserted_at %></td>
            <td class="px-4 py-3" title="<%= products_by_group(j.products) %>">
              <%= products_by_group(j.products, max_products: 3) %>
            </td>
            <td class="px-4 py-3">
              <%= render HistoryWeb.StatusView, "_pill.html", status: j.status %>
            </td>
            <td class="px-4 py-3 text-right">
              <button
                type="button"
                class="text-red-500 opacity-75 hover:opacity-100 invisible group-hover:visible"
                phx-click="cancel"
                phx-value-history-job-id="<%= j.id %>"
              >
                Cancel
              </button>
            </td>
          </tr>
        <% end %>
      <% else %>
        <tr class="hover:bg-gray-50 border-t border-b group">
          <td colspan="7" class="px-4 py-3">No predicted rate download jobs</td>
        </tr>
      <% end %>
    </tbody>
    <tfoot>
      <tr>
        <td colspan="7" class="px-4 py-3 text-right">
          <%= render(
            Stylish.Table,
            "navigation.html",
            to: &Routes.predicted_funding_rate_job_path(&1, :index, page: &2),
            conn: @socket,
            previous_page: @previous_page,
            current_page: @current_page,
            next_page: @next_page,
            last_page: @last_page) %>
        </td>
      </tr>
    </tfoot>
  </table>
</div>
